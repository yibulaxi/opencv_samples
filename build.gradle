// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        // central仓和jcenter仓的聚合仓
        maven { url 'https://maven.aliyun.com/repository/public' }
        // https://repo1.maven.org/maven2/
        maven { url 'https://maven.aliyun.com/repository/central' }
        // http://jcenter.bintray.com/
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        // https://maven.google.com/
        maven { url 'https://maven.aliyun.com/repository/google' }
        // https://plugins.gradle.org/m2/
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        // http://repo.spring.io/libs-milestone/
        maven { url 'https://maven.aliyun.com/repository/spring' }
        // http://repo.spring.io/plugins-release/
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        // https://repo.grails.org/grails/core
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        // https://repository.apache.org/snapshots/
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }

        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        mavenCentral()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        // central仓和jcenter仓的聚合仓
        maven { url 'https://maven.aliyun.com/repository/public' }
        // https://repo1.maven.org/maven2/
        maven { url 'https://maven.aliyun.com/repository/central' }
        // http://jcenter.bintray.com/
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        // https://maven.google.com/
        maven { url 'https://maven.aliyun.com/repository/google' }
        // https://plugins.gradle.org/m2/
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        // http://repo.spring.io/libs-milestone/
        maven { url 'https://maven.aliyun.com/repository/spring' }
        // http://repo.spring.io/plugins-release/
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        // https://repo.grails.org/grails/core
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        // https://repository.apache.org/snapshots/
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }

        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        mavenCentral()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//allprojects {
//    gradle.projectsEvaluated {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:unchecked"
//            options.compilerArgs << "-Xlint:deprecation"
//        }
//    }
//}

def opencv_strict_build_configuration = false

gradle.afterProject { project ->
    if (project.pluginManager.hasPlugin('com.android.application')
            || project.pluginManager.hasPlugin('com.android.library')
            || project.pluginManager.hasPlugin('com.android.test')
            || project.pluginManager.hasPlugin('com.android.feature')) {
//        if (true) {
        if (false) {
            gradle.println("Override build ABIs for the project ${project.name}")
            project.android {
                splits {
                    abi {
                        enable true
                        universalApk false

//reset()
//include 'armeabi-v7a'
//include 'arm64-v8a'
//include 'x86'
//include 'x86_64'

                    }
                }
            }
        }

        if (true) {
            gradle.println("Override lintOptions for the project ${project.name}")
            project.android {
                lintOptions {
                    // checkReleaseBuilds false
                    abortOnError false
                }
            }
        }

        // (you still need to re-build OpenCV with debug information to debug it)
        if (true) {
            gradle.println("Override doNotStrip-debug for the project ${project.name}")
            project.android {
                buildTypes {
                    debug {
                        packagingOptions {
                            doNotStrip '**/*.so'  // controlled by OpenCV CMake scripts
                        }
                    }
                }
            }
        }
        if (false || project.hasProperty("doNotStrip")) {
            gradle.println("Override doNotStrip-release for the project ${project.name}")
            project.android {
                buildTypes {
                    release {
                        packagingOptions {
                            doNotStrip '**/*.so'  // controlled by OpenCV CMake scripts
                        }
                    }
                }
            }
        }

        // Android Gradle Plugin (AGP) 3.5+ is required
        // https://github.com/android/ndk-samples/wiki/Configure-NDK-Path
        def isNdkVersionSupported = project.android.metaClass.getProperties().find { it.name == 'ndkVersion' } != null
        if ((false || opencv_strict_build_configuration) && isNdkVersionSupported) {
            gradle.println("Override ndkVersion for the project ${project.name}")
            project.android {
                ndkVersion '18.1.5063045'
            }
        }
    }
}
